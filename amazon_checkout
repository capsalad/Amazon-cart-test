<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head profile="http://selenium-ide.openqa.org/profiles/test-case">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="selenium.base" href="http://www.amazon.com/" />
<title>Amazon_checkout</title>
</head>
<body>
<table cellpadding="1" cellspacing="1" border="1">
<thead>
<tr><td rowspan="1" colspan="3">Amazon_checkout</td></tr>
</thead><tbody>
<!--Store variables for filling out amazon.com order form-->
<!--short, medium, and long delays: 0.7, 1.2, and 3.0 seconds, respectively-->
<tr>
	<td>store</td>
	<td>700</td>
	<td>shortDelay</td>
</tr>
<tr>
	<td>store</td>
	<td>1200</td>
	<td>mediumDelay</td>
</tr>
<tr>
	<td>store</td>
	<td>3000</td>
	<td>longDelay</td>
</tr>
<tr>
	<td>store</td>
	<td>http://www.amazon.com</td>
	<td>baseURL</td>
</tr>
<tr>
	<td>store</td>
	<td>Test Noname</td>
	<td>customerName</td>
</tr>
<tr>
	<td>store</td>
	<td>noname@dummy.com</td>
	<td>customerEmailAddress</td>
</tr>
<tr>
	<td>store</td>
	<td>testTest1</td>
	<td>customerPassword</td>
</tr>
<tr>
	<td>store</td>
	<td>3141 Road to Nowhere</td>
	<td>customerAddress1</td>
</tr>
<tr>
	<td>store</td>
	<td>Suite 592</td>
	<td>customerAddress2</td>
</tr>
<tr>
	<td>store</td>
	<td>Raleigh</td>
	<td>customerCity</td>
</tr>
<tr>
	<td>store</td>
	<td>NC</td>
	<td>customerStateOrRegion</td>
</tr>
<tr>
	<td>store</td>
	<td>27604</td>
	<td>customerZIP</td>
</tr>
<tr>
	<td>store</td>
	<td>(919) 555-5555</td>
	<td>customerPhone</td>
</tr>
<!--This is a "legitimate" - but FAKE - Visa number. It's just a 16-digit number selected to pass the Luhn check-digit algorithm, but AFAIK is not real.-->
<tr>
	<td>store</td>
	<td>4230117864874462</td>
	<td>customerCreditCardNumber</td>
</tr>
<!--Store testcase start time-->
<tr>
	<td>storeEval</td>
	<td>{ var startTime = new Date().getTime(); startTime; }</td>
	<td>startTime</td>
</tr>
<!--Generate ISO-8601 timestamp-->
<tr>
	<td>storeEval</td>
	<td>{ var stamp = new Date(); var year = stamp.getYear() + 1900; var month = stamp.getMonth() + 1; var day = stamp.getDate(); var hours = stamp.getHours(); var mins = stamp.getMinutes(); var time; var secs = stamp.getSeconds(); if (month &lt; 10) { month = &quot;0&quot; + month; } if (day &lt; 10) { day = &quot;0&quot; + day; } if (mins &lt; 10) { mins = &quot;0&quot; + mins; } if (secs &lt; 10) { secs = &quot;0&quot; + secs; } timestamp = &quot;&quot; + year + &quot;-&quot; + month + &quot;-&quot; + day + &quot; &quot; + hours + &quot;:&quot; + mins + &quot;:&quot; + secs; }</td>
	<td>timeStamp</td>
</tr>
<!--Open the page-->
<tr>
	<td>open</td>
	<td>${baseURL}</td>
	<td></td>
</tr>
<!--I used an assert - rather than verify - here because if we're on the wrong starting page, there's no point continuing.-->
<tr>
	<td>assertTitle</td>
	<td>Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs &amp; more</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>css=#nav-flyout-ya-newCust &gt; a.nav_a</td>
	<td></td>
</tr>
<!--Logging in (amazon.com authentication)-->
<tr>
	<td>type</td>
	<td>div[id*="ap_register_name_input"] > input[id*="ap_customer_name"]</td>
	<td>${customerName}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=auth-email</td>
	<td>${customerEmailAddress}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=auth-email-check</td>
	<td>${customerEmailAddress}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=auth-password</td>
	<td>${customerPassword}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=auth-password-check</td>
	<td>${customerPassword}</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>css=input.a-button-input</td>
	<td></td>
</tr>
<!--Now we populate the cart with some items-->
<tr>
	<td>clickAndWait</td>
	<td>//li[@id='result_3']/div/div/div/div[2]/div/a/h2</td>
	<td></td>
</tr>
<tr>
	<td>select</td>
	<td>id=searchDropdownBox</td>
	<td>label=Books</td>
</tr>
<tr>
	<td>click</td>
	<td>css=option[value=&quot;search-alias=stripbooks&quot;]</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=twotabsearchtextbox</td>
	<td>Agile</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>css=input.nav-submit-input</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>//li[@id='result_6']/div/div/div/div[2]/div/a/h2</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=add-to-cart-button</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>id=hlb-ptc-btn-native</td>
	<td></td>
</tr>
<!--Add shipping/billing address-->
<tr>
	<td>type</td>
	<td>id=enterAddressFullName</td>
	<td>${customerName}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=enterAddressAddressLine1</td>
	<td>${customerAddress1}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=enterAddressCity</td>
	<td>${customerCity}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=enterAddressStateOrRegion</td>
	<td>${customerStateOrRegion}</td>
</tr>
<tr>
	<td>type</td>
	<td>id=enterAddressPostalCode</td>
	<td>${customerZIP}</td>
</tr>
<tr>
	<td>select</td>
	<td>id=AddressType</td>
	<td>label=Yes, deliver on weekends</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>name=shipToThisAddress</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=enterAddressPhoneNumber</td>
	<td>${customerPhone}</td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>name=shipToThisAddress</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>id=addr_0</td>
	<td></td>
</tr>
<tr>
	<td>clickAndWait</td>
	<td>name=useSelectedAddress</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>xpath=(//input[@value='Continue'])[3]</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=addCreditCardNumber</td>
	<td>${customerCreditCardNumber}</td>
</tr>
<tr>
	<td>click</td>
	<td>css=button.a-button-text.a-declarative</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>xpath=(//button[@type='button'])[2]</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=2016</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>css=button.a-button-text.a-declarative</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=06</td>
	<td></td>
</tr>
<tr>
	<td>type</td>
	<td>id=ccName</td>
	<td>${customerName}</td>
</tr>
<tr>
	<td>click</td>
	<td>id=ccAddCard</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>id=continue-bottom</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>id=continue-top</td>
	<td></td>
</tr>
<tr>
	<td>click</td>
	<td>link=No Thanks</td>
	<td></td>
</tr>
<!--This is where the order would be placed - should be clickAndWait name=placeYourOrder1, but we shouldn't annoy amazon.com with phony orders-->
<!--Store testcase end time-->
<tr>
	<td>storeEval</td>
	<td>{ endTime = new Date().getTime(); endTime; }</td>
	<td>endingTime</td>
</tr>
<!--Calculate elapsed time-->
<tr>
	<td>storeEval</td>
	<td>{ var duration = ${endingTime} - ${startingTime}; duration; }</td>
	<td>elapsedTime</td>
</tr>
<tr>
	<td>storeEval</td>
	<td>javascript{parseInt(storedVars['elapsedTime']) / parseInt(1000)}</td>
	<td>totalSecs</td>
</tr>
<!--Calculate seconds (total seconds modulo 60) and zero-pad if necessary-->
<tr>
	<td>storeEval</td>
	<td>{ secs = parseInt(${totalSecs} % 60); } if (secs &amp;lt; 10) { secs = &amp;quot;0&amp;quot; + secs; }</td>
	<td>seconds</td>
</tr>
<!--Calculate minutes (zero-pad if necessary)-->
<tr>
	<td>storeEval</td>
	<td>{ if (${totalSecs} &amp;gt; 60) { minutes = Math.floor(${totalSecs} / 60); } if (minutes &amp;lt; 10) { minutes = &amp;quot;0&amp;quot; + minutes; } else { minutes = 0; } }</td>
	<td>minutes</td>
</tr>
<tr>
	<td>storeEval</td>
	<td>{ new Date (${startingTime}) }</td>
	<td>startTime</td>
</tr>
<tr>
	<td>storeEval</td>
	<td>{ new Date (${endingTime}) }</td>
	<td>endTime</td>
</tr>
<!--Output start/end/elapsed time-->
<tr>
	<td>echo</td>
	<td>Test launched ${startTime}, completed ${endTime}, duration = ${minutes}:${seconds}.</td>
	<td></td>
</tr>
</tbody></table>
</body>
</html>
